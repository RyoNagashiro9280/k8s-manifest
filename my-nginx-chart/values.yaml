# Default values for my-nginx-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3
image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "fca1879"
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
# This is for setting Kubernetes Annotations to a Pod.
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
podLabels: {}
podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
# capabilities:
#   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

# This is for setting up a service
service:
  # This sets the service type
  type: ClusterIP
  # This sets the ports
  port: 80
# This block is for setting up the ingress
ingress:
  enabled: true
  className: "nginx" # Use your Ingress Controller's class name
  annotations: # Annotations for Ingress
    # kubernetes.io/ingress.class: nginx # Deprecated
    cert-manager.io/cluster-issuer: letsencrypt-prod # Your Cert-Manager ClusterIssuer
    # nginx.ingress.kubernetes.io/rewrite-target: / # If needed
  hosts:
    - host: nqg1t0.com # Your domain name
      paths:
        - path: / # Path to expose
          pathType: ImplementationSpecific # Or Prefix
          # backend: # Usually auto-configured by Helm templates
          #   service:
          #     name: chart-example.local
          #     port:
          #       number: 80
  # If you want to expose multiple hostnames
  # - host: another.example.com
  #   paths:
  #     - path: /
  #       pathType: ImplementationSpecific

  tls: # TLS (HTTPS) settings
    # Secrets must be manually created in the namespace or cert-manager will provision them.
    - secretName: nginx-sample-tls-prod # Secret name for the certificate
      hosts:
        - nqg1t0.com # Hostname for TLS
  # - secretName: another-example-com-tls
  #   hosts:
  #     - another.example.com
resources: {} # Resource requests and limits for Pods
# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
# limits:
#   cpu: 100m
#   memory: 128Mi
# requests:
#   cpu: 100m
#   memory: 128Mi

# This is to setup the liveness and readiness probes
livenessProbe:
  httpGet:
    path: /
    port: http
readinessProbe:
  httpGet:
    path: /
    port: http
# This section is for setting up autoscaling
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100 # Changed from 10 to 100 as per helm create default
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80
# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}
tolerations: []
affinity: {}
